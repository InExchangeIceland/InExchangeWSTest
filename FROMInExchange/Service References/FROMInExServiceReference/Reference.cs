//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FROMInExchange.FROMInExServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://skhub.transactions/", ConfigurationName="FROMInExServiceReference.WSSkTransactionSoapHttp")]
    public interface WSSkTransactionSoapHttp {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/Ping", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.PingResponse Ping(FROMInExchange.FROMInExServiceReference.PingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/Ping", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.PingResponse> PingAsync(FROMInExchange.FROMInExServiceReference.PingRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTransactionList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.GetTransactionListResponse GetTransactionList(FROMInExchange.FROMInExServiceReference.GetTransactionListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTransactionList", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionListResponse> GetTransactionListAsync(FROMInExchange.FROMInExServiceReference.GetTransactionListRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.GetTransactionResponse GetTransaction(FROMInExchange.FROMInExServiceReference.GetTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionResponse> GetTransactionAsync(FROMInExchange.FROMInExServiceReference.GetTransactionRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/UpdateTransactionStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusResponse UpdateTransactionStatus(FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/UpdateTransactionStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusResponse> UpdateTransactionStatusAsync(FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetAuthorizedTradingPartners", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersResponse GetAuthorizedTradingPartners(FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetAuthorizedTradingPartners", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersResponse> GetAuthorizedTradingPartnersAsync(FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/ReceiverPartyExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsResponse ReceiverPartyExists(FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/ReceiverPartyExists", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsResponse> ReceiverPartyExistsAsync(FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTradingPartners", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.GetTradingPartnersResponse GetTradingPartners(FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTradingPartners", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTradingPartnersResponse> GetTradingPartnersAsync(FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/SenderPartyExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.SenderPartyExistsResponse SenderPartyExists(FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/SenderPartyExists", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.SenderPartyExistsResponse> SenderPartyExistsAsync(FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/SubmitTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.SubmitTransactionResponse SubmitTransaction(FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/SubmitTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.SubmitTransactionResponse> SubmitTransactionAsync(FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/ValidateTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.ValidateTransactionResponse ValidateTransaction(FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/ValidateTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.ValidateTransactionResponse> ValidateTransactionAsync(FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTransactionStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.GetTransactionStatusResponse GetTransactionStatus(FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/GetTransactionStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionStatusResponse> GetTransactionStatusAsync(FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/CancelTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FROMInExchange.FROMInExServiceReference.CancelTransactionResponse CancelTransaction(FROMInExchange.FROMInExServiceReference.CancelTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.InExchange.is/CancelTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.CancelTransactionResponse> CancelTransactionAsync(FROMInExchange.FROMInExServiceReference.CancelTransactionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Ping", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class PingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message;
        
        public PingRequest() {
        }
        
        public PingRequest(string Message) {
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PingResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class PingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string @return;
        
        public PingResponse() {
        }
        
        public PingResponse(string @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class TransactionListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] linesField;
        
        private string errorMessageField;
        
        private string errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("lines", IsNullable=true, Order=0)]
        public string[] lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
                this.RaisePropertyChanged("lines");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkTransactionStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string resultMessageField;
        
        private string errorMessageField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string resultMessage {
            get {
                return this.resultMessageField;
            }
            set {
                this.resultMessageField = value;
                this.RaisePropertyChanged("resultMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkValidationResults : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorMessageField;
        
        private string errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkTransactionExistsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string resultField;
        
        private string errorMessageField;
        
        private string errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkTradingPartnersListStandards : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string transactionTypeField;
        
        private string standardField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string transactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
                this.RaisePropertyChanged("transactionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string standard {
            get {
                return this.standardField;
            }
            set {
                this.standardField = value;
                this.RaisePropertyChanged("standard");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkTradingPartnersListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string receiverPartyIdentifierField;
        
        private string nationalIdentifierField;
        
        private SkTradingPartnersListStandards[] standardsField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string receiverPartyIdentifier {
            get {
                return this.receiverPartyIdentifierField;
            }
            set {
                this.receiverPartyIdentifierField = value;
                this.RaisePropertyChanged("receiverPartyIdentifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string nationalIdentifier {
            get {
                return this.nationalIdentifierField;
            }
            set {
                this.nationalIdentifierField = value;
                this.RaisePropertyChanged("nationalIdentifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("standards", IsNullable=true, Order=2)]
        public SkTradingPartnersListStandards[] standards {
            get {
                return this.standardsField;
            }
            set {
                this.standardsField = value;
                this.RaisePropertyChanged("standards");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkTradingPartnersListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SkTradingPartnersListItem[] itemsField;
        
        private string errorMessageField;
        
        private string errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("items", IsNullable=true, Order=0)]
        public SkTradingPartnersListItem[] items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
                this.RaisePropertyChanged("items");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkTransactionResults : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uUIDField;
        
        private string errorMessageField;
        
        private string errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string UUID {
            get {
                return this.uUIDField;
            }
            set {
                this.uUIDField = value;
                this.RaisePropertyChanged("UUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://skhub.transactions/")]
    public partial class SkTransactionPayload : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> receivedField;
        
        private string receiverPartyIdentifierField;
        
        private string transactionTypeField;
        
        private string senderPartyIdentifierField;
        
        private string senderField;
        
        private string standardField;
        
        private string payloadField;
        
        private string errorMessageField;
        
        private string statusField;
        
        private string errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<System.DateTime> received {
            get {
                return this.receivedField;
            }
            set {
                this.receivedField = value;
                this.RaisePropertyChanged("received");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string receiverPartyIdentifier {
            get {
                return this.receiverPartyIdentifierField;
            }
            set {
                this.receiverPartyIdentifierField = value;
                this.RaisePropertyChanged("receiverPartyIdentifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string transactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
                this.RaisePropertyChanged("transactionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string senderPartyIdentifier {
            get {
                return this.senderPartyIdentifierField;
            }
            set {
                this.senderPartyIdentifierField = value;
                this.RaisePropertyChanged("senderPartyIdentifier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
                this.RaisePropertyChanged("sender");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string standard {
            get {
                return this.standardField;
            }
            set {
                this.standardField = value;
                this.RaisePropertyChanged("standard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("payload");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionList", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTransactionListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReceiverPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Standard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public GetTransactionListRequest() {
        }
        
        public GetTransactionListRequest(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            this.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            this.Standard = Standard;
            this.TransactionType = TransactionType;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionListResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTransactionListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.TransactionListResult @return;
        
        public GetTransactionListResponse() {
        }
        
        public GetTransactionListResponse(FROMInExchange.FROMInExServiceReference.TransactionListResult @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransaction", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionUUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public GetTransactionRequest() {
        }
        
        public GetTransactionRequest(string TransactionUUID, string Authorization, string AuthorizationKey) {
            this.TransactionUUID = TransactionUUID;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTransactionPayload @return;
        
        public GetTransactionResponse() {
        }
        
        public GetTransactionResponse(FROMInExchange.FROMInExServiceReference.SkTransactionPayload @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransactionStatus", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class UpdateTransactionStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionUUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResultMessage;
        
        public UpdateTransactionStatusRequest() {
        }
        
        public UpdateTransactionStatusRequest(string TransactionUUID, string Authorization, string AuthorizationKey, string Status, string ResultMessage) {
            this.TransactionUUID = TransactionUUID;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
            this.Status = Status;
            this.ResultMessage = ResultMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransactionStatusResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class UpdateTransactionStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTransactionResults @return;
        
        public UpdateTransactionStatusResponse() {
        }
        
        public UpdateTransactionStatusResponse(FROMInExchange.FROMInExServiceReference.SkTransactionResults @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuthorizedTradingPartners", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetAuthorizedTradingPartnersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReceiverPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Standard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public GetAuthorizedTradingPartnersRequest() {
        }
        
        public GetAuthorizedTradingPartnersRequest(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            this.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            this.Standard = Standard;
            this.TransactionType = TransactionType;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuthorizedTradingPartnersResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetAuthorizedTradingPartnersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTradingPartnersListResult @return;
        
        public GetAuthorizedTradingPartnersResponse() {
        }
        
        public GetAuthorizedTradingPartnersResponse(FROMInExchange.FROMInExServiceReference.SkTradingPartnersListResult @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiverPartyExists", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class ReceiverPartyExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReceiverPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Standard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public ReceiverPartyExistsRequest() {
        }
        
        public ReceiverPartyExistsRequest(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            this.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            this.Standard = Standard;
            this.TransactionType = TransactionType;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiverPartyExistsResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class ReceiverPartyExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTransactionExistsResult @return;
        
        public ReceiverPartyExistsResponse() {
        }
        
        public ReceiverPartyExistsResponse(FROMInExchange.FROMInExServiceReference.SkTransactionExistsResult @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradingPartners", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTradingPartnersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReceiverPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Standard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public GetTradingPartnersRequest() {
        }
        
        public GetTradingPartnersRequest(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            this.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            this.Standard = Standard;
            this.TransactionType = TransactionType;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradingPartnersResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTradingPartnersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTradingPartnersListResult @return;
        
        public GetTradingPartnersResponse() {
        }
        
        public GetTradingPartnersResponse(FROMInExchange.FROMInExServiceReference.SkTradingPartnersListResult @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SenderPartyExists", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class SenderPartyExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SenderPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Standard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public SenderPartyExistsRequest() {
        }
        
        public SenderPartyExistsRequest(string SenderPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            this.SenderPartyIdentifier = SenderPartyIdentifier;
            this.Standard = Standard;
            this.TransactionType = TransactionType;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SenderPartyExistsResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class SenderPartyExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTransactionExistsResult @return;
        
        public SenderPartyExistsResponse() {
        }
        
        public SenderPartyExistsResponse(FROMInExchange.FROMInExServiceReference.SkTransactionExistsResult @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitTransaction", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class SubmitTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SenderPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReceiverPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Standard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Payload;
        
        public SubmitTransactionRequest() {
        }
        
        public SubmitTransactionRequest(string SenderPartyIdentifier, string ReceiverPartyIdentifier, string MessageIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey, string Payload) {
            this.SenderPartyIdentifier = SenderPartyIdentifier;
            this.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            this.MessageIdentifier = MessageIdentifier;
            this.Standard = Standard;
            this.TransactionType = TransactionType;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
            this.Payload = Payload;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitTransactionResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class SubmitTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTransactionResults @return;
        
        public SubmitTransactionResponse() {
        }
        
        public SubmitTransactionResponse(FROMInExchange.FROMInExServiceReference.SkTransactionResults @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTransaction", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class ValidateTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SenderPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReceiverPartyIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Standard;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Payload;
        
        public ValidateTransactionRequest() {
        }
        
        public ValidateTransactionRequest(string SenderPartyIdentifier, string ReceiverPartyIdentifier, string MessageIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey, string Payload) {
            this.SenderPartyIdentifier = SenderPartyIdentifier;
            this.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            this.MessageIdentifier = MessageIdentifier;
            this.Standard = Standard;
            this.TransactionType = TransactionType;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
            this.Payload = Payload;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateTransactionResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class ValidateTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkValidationResults @return;
        
        public ValidateTransactionResponse() {
        }
        
        public ValidateTransactionResponse(FROMInExchange.FROMInExServiceReference.SkValidationResults @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionStatus", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTransactionStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionUUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public GetTransactionStatusRequest() {
        }
        
        public GetTransactionStatusRequest(string TransactionUUID, string Authorization, string AuthorizationKey) {
            this.TransactionUUID = TransactionUUID;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionStatusResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class GetTransactionStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTransactionStatus @return;
        
        public GetTransactionStatusResponse() {
        }
        
        public GetTransactionStatusResponse(FROMInExchange.FROMInExServiceReference.SkTransactionStatus @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelTransaction", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class CancelTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionUUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Authorization;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthorizationKey;
        
        public CancelTransactionRequest() {
        }
        
        public CancelTransactionRequest(string TransactionUUID, string Authorization, string AuthorizationKey) {
            this.TransactionUUID = TransactionUUID;
            this.Authorization = Authorization;
            this.AuthorizationKey = AuthorizationKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelTransactionResponse", WrapperNamespace="http://skhub.transactions/", IsWrapped=true)]
    public partial class CancelTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://skhub.transactions/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FROMInExchange.FROMInExServiceReference.SkTransactionResults @return;
        
        public CancelTransactionResponse() {
        }
        
        public CancelTransactionResponse(FROMInExchange.FROMInExServiceReference.SkTransactionResults @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSSkTransactionSoapHttpChannel : FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSSkTransactionSoapHttpClient : System.ServiceModel.ClientBase<FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp>, FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp {
        
        public WSSkTransactionSoapHttpClient() {
        }
        
        public WSSkTransactionSoapHttpClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSSkTransactionSoapHttpClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSkTransactionSoapHttpClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSkTransactionSoapHttpClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.PingResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.Ping(FROMInExchange.FROMInExServiceReference.PingRequest request) {
            return base.Channel.Ping(request);
        }
        
        public string Ping(string Message) {
            FROMInExchange.FROMInExServiceReference.PingRequest inValue = new FROMInExchange.FROMInExServiceReference.PingRequest();
            inValue.Message = Message;
            FROMInExchange.FROMInExServiceReference.PingResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).Ping(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.PingResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.PingAsync(FROMInExchange.FROMInExServiceReference.PingRequest request) {
            return base.Channel.PingAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.PingResponse> PingAsync(string Message) {
            FROMInExchange.FROMInExServiceReference.PingRequest inValue = new FROMInExchange.FROMInExServiceReference.PingRequest();
            inValue.Message = Message;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).PingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.GetTransactionListResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTransactionList(FROMInExchange.FROMInExServiceReference.GetTransactionListRequest request) {
            return base.Channel.GetTransactionList(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.TransactionListResult GetTransactionList(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTransactionListRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTransactionListRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.GetTransactionListResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTransactionList(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionListResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTransactionListAsync(FROMInExchange.FROMInExServiceReference.GetTransactionListRequest request) {
            return base.Channel.GetTransactionListAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionListResponse> GetTransactionListAsync(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTransactionListRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTransactionListRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTransactionListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.GetTransactionResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTransaction(FROMInExchange.FROMInExServiceReference.GetTransactionRequest request) {
            return base.Channel.GetTransaction(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTransactionPayload GetTransaction(string TransactionUUID, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTransactionRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.GetTransactionResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTransaction(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTransactionAsync(FROMInExchange.FROMInExServiceReference.GetTransactionRequest request) {
            return base.Channel.GetTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionResponse> GetTransactionAsync(string TransactionUUID, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTransactionRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTransactionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.UpdateTransactionStatus(FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest request) {
            return base.Channel.UpdateTransactionStatus(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTransactionResults UpdateTransactionStatus(string TransactionUUID, string Authorization, string AuthorizationKey, string Status, string ResultMessage) {
            FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest inValue = new FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            inValue.Status = Status;
            inValue.ResultMessage = ResultMessage;
            FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).UpdateTransactionStatus(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.UpdateTransactionStatusAsync(FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest request) {
            return base.Channel.UpdateTransactionStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusResponse> UpdateTransactionStatusAsync(string TransactionUUID, string Authorization, string AuthorizationKey, string Status, string ResultMessage) {
            FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest inValue = new FROMInExchange.FROMInExServiceReference.UpdateTransactionStatusRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            inValue.Status = Status;
            inValue.ResultMessage = ResultMessage;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).UpdateTransactionStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetAuthorizedTradingPartners(FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest request) {
            return base.Channel.GetAuthorizedTradingPartners(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTradingPartnersListResult GetAuthorizedTradingPartners(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest inValue = new FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetAuthorizedTradingPartners(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetAuthorizedTradingPartnersAsync(FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest request) {
            return base.Channel.GetAuthorizedTradingPartnersAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersResponse> GetAuthorizedTradingPartnersAsync(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest inValue = new FROMInExchange.FROMInExServiceReference.GetAuthorizedTradingPartnersRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetAuthorizedTradingPartnersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.ReceiverPartyExists(FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest request) {
            return base.Channel.ReceiverPartyExists(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTransactionExistsResult ReceiverPartyExists(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest inValue = new FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).ReceiverPartyExists(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.ReceiverPartyExistsAsync(FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest request) {
            return base.Channel.ReceiverPartyExistsAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsResponse> ReceiverPartyExistsAsync(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest inValue = new FROMInExchange.FROMInExServiceReference.ReceiverPartyExistsRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).ReceiverPartyExistsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.GetTradingPartnersResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTradingPartners(FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest request) {
            return base.Channel.GetTradingPartners(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTradingPartnersListResult GetTradingPartners(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.GetTradingPartnersResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTradingPartners(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTradingPartnersResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTradingPartnersAsync(FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest request) {
            return base.Channel.GetTradingPartnersAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTradingPartnersResponse> GetTradingPartnersAsync(string ReceiverPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTradingPartnersRequest();
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTradingPartnersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.SenderPartyExistsResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.SenderPartyExists(FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest request) {
            return base.Channel.SenderPartyExists(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTransactionExistsResult SenderPartyExists(string SenderPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest inValue = new FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest();
            inValue.SenderPartyIdentifier = SenderPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.SenderPartyExistsResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).SenderPartyExists(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.SenderPartyExistsResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.SenderPartyExistsAsync(FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest request) {
            return base.Channel.SenderPartyExistsAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.SenderPartyExistsResponse> SenderPartyExistsAsync(string SenderPartyIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest inValue = new FROMInExchange.FROMInExServiceReference.SenderPartyExistsRequest();
            inValue.SenderPartyIdentifier = SenderPartyIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).SenderPartyExistsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.SubmitTransactionResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.SubmitTransaction(FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest request) {
            return base.Channel.SubmitTransaction(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTransactionResults SubmitTransaction(string SenderPartyIdentifier, string ReceiverPartyIdentifier, string MessageIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey, string Payload) {
            FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest();
            inValue.SenderPartyIdentifier = SenderPartyIdentifier;
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.MessageIdentifier = MessageIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            inValue.Payload = Payload;
            FROMInExchange.FROMInExServiceReference.SubmitTransactionResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).SubmitTransaction(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.SubmitTransactionResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.SubmitTransactionAsync(FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest request) {
            return base.Channel.SubmitTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.SubmitTransactionResponse> SubmitTransactionAsync(string SenderPartyIdentifier, string ReceiverPartyIdentifier, string MessageIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey, string Payload) {
            FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.SubmitTransactionRequest();
            inValue.SenderPartyIdentifier = SenderPartyIdentifier;
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.MessageIdentifier = MessageIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            inValue.Payload = Payload;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).SubmitTransactionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.ValidateTransactionResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.ValidateTransaction(FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest request) {
            return base.Channel.ValidateTransaction(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkValidationResults ValidateTransaction(string SenderPartyIdentifier, string ReceiverPartyIdentifier, string MessageIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey, string Payload) {
            FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest();
            inValue.SenderPartyIdentifier = SenderPartyIdentifier;
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.MessageIdentifier = MessageIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            inValue.Payload = Payload;
            FROMInExchange.FROMInExServiceReference.ValidateTransactionResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).ValidateTransaction(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.ValidateTransactionResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.ValidateTransactionAsync(FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest request) {
            return base.Channel.ValidateTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.ValidateTransactionResponse> ValidateTransactionAsync(string SenderPartyIdentifier, string ReceiverPartyIdentifier, string MessageIdentifier, string Standard, string TransactionType, string Authorization, string AuthorizationKey, string Payload) {
            FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.ValidateTransactionRequest();
            inValue.SenderPartyIdentifier = SenderPartyIdentifier;
            inValue.ReceiverPartyIdentifier = ReceiverPartyIdentifier;
            inValue.MessageIdentifier = MessageIdentifier;
            inValue.Standard = Standard;
            inValue.TransactionType = TransactionType;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            inValue.Payload = Payload;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).ValidateTransactionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.GetTransactionStatusResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTransactionStatus(FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest request) {
            return base.Channel.GetTransactionStatus(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTransactionStatus GetTransactionStatus(string TransactionUUID, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.GetTransactionStatusResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTransactionStatus(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionStatusResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.GetTransactionStatusAsync(FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest request) {
            return base.Channel.GetTransactionStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.GetTransactionStatusResponse> GetTransactionStatusAsync(string TransactionUUID, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest inValue = new FROMInExchange.FROMInExServiceReference.GetTransactionStatusRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).GetTransactionStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FROMInExchange.FROMInExServiceReference.CancelTransactionResponse FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.CancelTransaction(FROMInExchange.FROMInExServiceReference.CancelTransactionRequest request) {
            return base.Channel.CancelTransaction(request);
        }
        
        public FROMInExchange.FROMInExServiceReference.SkTransactionResults CancelTransaction(string TransactionUUID, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.CancelTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.CancelTransactionRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            FROMInExchange.FROMInExServiceReference.CancelTransactionResponse retVal = ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).CancelTransaction(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.CancelTransactionResponse> FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp.CancelTransactionAsync(FROMInExchange.FROMInExServiceReference.CancelTransactionRequest request) {
            return base.Channel.CancelTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<FROMInExchange.FROMInExServiceReference.CancelTransactionResponse> CancelTransactionAsync(string TransactionUUID, string Authorization, string AuthorizationKey) {
            FROMInExchange.FROMInExServiceReference.CancelTransactionRequest inValue = new FROMInExchange.FROMInExServiceReference.CancelTransactionRequest();
            inValue.TransactionUUID = TransactionUUID;
            inValue.Authorization = Authorization;
            inValue.AuthorizationKey = AuthorizationKey;
            return ((FROMInExchange.FROMInExServiceReference.WSSkTransactionSoapHttp)(this)).CancelTransactionAsync(inValue);
        }
    }
}
